   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.matrix_setup,"ax",@progbits
  11               		.weak	matrix_setup
  13               	matrix_setup:
  14               	.LFB4:
  15               		.file 1 "./tmk_core/common/keyboard.c"
   1:./tmk_core/common/keyboard.c **** /*
   2:./tmk_core/common/keyboard.c **** Copyright 2011, 2012, 2013 Jun Wako <wakojun@gmail.com>
   3:./tmk_core/common/keyboard.c **** 
   4:./tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:./tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:./tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:./tmk_core/common/keyboard.c **** (at your option) any later version.
   8:./tmk_core/common/keyboard.c **** 
   9:./tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:./tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:./tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:./tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:./tmk_core/common/keyboard.c **** 
  14:./tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:./tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:./tmk_core/common/keyboard.c **** */
  17:./tmk_core/common/keyboard.c **** 
  18:./tmk_core/common/keyboard.c **** #include <stdint.h>
  19:./tmk_core/common/keyboard.c **** #include "keyboard.h"
  20:./tmk_core/common/keyboard.c **** #include "matrix.h"
  21:./tmk_core/common/keyboard.c **** #include "keymap.h"
  22:./tmk_core/common/keyboard.c **** #include "host.h"
  23:./tmk_core/common/keyboard.c **** #include "led.h"
  24:./tmk_core/common/keyboard.c **** #include "keycode.h"
  25:./tmk_core/common/keyboard.c **** #include "timer.h"
  26:./tmk_core/common/keyboard.c **** #include "print.h"
  27:./tmk_core/common/keyboard.c **** #include "debug.h"
  28:./tmk_core/common/keyboard.c **** #include "command.h"
  29:./tmk_core/common/keyboard.c **** #include "util.h"
  30:./tmk_core/common/keyboard.c **** #include "sendchar.h"
  31:./tmk_core/common/keyboard.c **** #include "eeconfig.h"
  32:./tmk_core/common/keyboard.c **** #include "backlight.h"
  33:./tmk_core/common/keyboard.c **** #include "action_layer.h"
  34:./tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  35:./tmk_core/common/keyboard.c **** #   include "bootmagic.h"
  36:./tmk_core/common/keyboard.c **** #else
  37:./tmk_core/common/keyboard.c **** #   include "magic.h"
  38:./tmk_core/common/keyboard.c **** #endif
  39:./tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  40:./tmk_core/common/keyboard.c **** #   include "mousekey.h"
  41:./tmk_core/common/keyboard.c **** #endif
  42:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  43:./tmk_core/common/keyboard.c **** #   include "ps2_mouse.h"
  44:./tmk_core/common/keyboard.c **** #endif
  45:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  46:./tmk_core/common/keyboard.c **** #   include "serial_mouse.h"
  47:./tmk_core/common/keyboard.c **** #endif
  48:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  49:./tmk_core/common/keyboard.c **** #   include "adb.h"
  50:./tmk_core/common/keyboard.c **** #endif
  51:./tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
  52:./tmk_core/common/keyboard.c **** #   include "rgblight.h"
  53:./tmk_core/common/keyboard.c **** #endif
  54:./tmk_core/common/keyboard.c **** #ifdef STENO_ENABLE
  55:./tmk_core/common/keyboard.c **** #   include "process_steno.h"
  56:./tmk_core/common/keyboard.c **** #endif
  57:./tmk_core/common/keyboard.c **** #ifdef FAUXCLICKY_ENABLE
  58:./tmk_core/common/keyboard.c **** #   include "fauxclicky.h"
  59:./tmk_core/common/keyboard.c **** #endif
  60:./tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
  61:./tmk_core/common/keyboard.c **** #   include "serial_link/system/serial_link.h"
  62:./tmk_core/common/keyboard.c **** #endif
  63:./tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
  64:./tmk_core/common/keyboard.c **** #   include "visualizer/visualizer.h"
  65:./tmk_core/common/keyboard.c **** #endif
  66:./tmk_core/common/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
  67:./tmk_core/common/keyboard.c **** #   include "pointing_device.h"
  68:./tmk_core/common/keyboard.c **** #endif
  69:./tmk_core/common/keyboard.c **** #ifdef MIDI_ENABLE
  70:./tmk_core/common/keyboard.c **** #   include "process_midi.h"
  71:./tmk_core/common/keyboard.c **** #endif
  72:./tmk_core/common/keyboard.c **** 
  73:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  74:./tmk_core/common/keyboard.c **** extern const uint16_t keymaps[][MATRIX_ROWS][MATRIX_COLS];
  75:./tmk_core/common/keyboard.c **** static matrix_row_t get_real_keys(uint8_t row, matrix_row_t rowdata){
  76:./tmk_core/common/keyboard.c ****     matrix_row_t out = 0;
  77:./tmk_core/common/keyboard.c ****     for (uint8_t col = 0; col < MATRIX_COLS; col++) {
  78:./tmk_core/common/keyboard.c ****         //read each key in the row data and check if the keymap defines it as a real key
  79:./tmk_core/common/keyboard.c ****         if (pgm_read_byte(&keymaps[0][row][col]) && (rowdata & (1<<col))){
  80:./tmk_core/common/keyboard.c ****             //this creates new row data, if a key is defined in the keymap, it will be set here
  81:./tmk_core/common/keyboard.c ****             out |= 1<<col;
  82:./tmk_core/common/keyboard.c ****         }
  83:./tmk_core/common/keyboard.c ****     }
  84:./tmk_core/common/keyboard.c ****     return out;
  85:./tmk_core/common/keyboard.c **** }
  86:./tmk_core/common/keyboard.c **** 
  87:./tmk_core/common/keyboard.c **** static inline bool popcount_more_than_one(matrix_row_t rowdata)
  88:./tmk_core/common/keyboard.c **** {
  89:./tmk_core/common/keyboard.c ****     rowdata &= rowdata-1; //if there are less than two bits (keys) set, rowdata will become zero
  90:./tmk_core/common/keyboard.c ****     return rowdata;
  91:./tmk_core/common/keyboard.c **** }
  92:./tmk_core/common/keyboard.c **** 
  93:./tmk_core/common/keyboard.c **** static inline bool has_ghost_in_row(uint8_t row, matrix_row_t rowdata)
  94:./tmk_core/common/keyboard.c **** {
  95:./tmk_core/common/keyboard.c ****     /* No ghost exists when less than 2 keys are down on the row.
  96:./tmk_core/common/keyboard.c ****     If there are "active" blanks in the matrix, the key can't be pressed by the user,
  97:./tmk_core/common/keyboard.c ****     there is no doubt as to which keys are really being pressed.
  98:./tmk_core/common/keyboard.c ****     The ghosts will be ignored, they are KC_NO.   */
  99:./tmk_core/common/keyboard.c ****     rowdata = get_real_keys(row, rowdata);
 100:./tmk_core/common/keyboard.c ****     if ((popcount_more_than_one(rowdata)) == 0){
 101:./tmk_core/common/keyboard.c ****         return false;
 102:./tmk_core/common/keyboard.c ****     }
 103:./tmk_core/common/keyboard.c ****     /* Ghost occurs when the row shares a column line with other row,
 104:./tmk_core/common/keyboard.c ****     and two columns are read on each row. Blanks in the matrix don't matter,
 105:./tmk_core/common/keyboard.c ****     so they are filtered out.
 106:./tmk_core/common/keyboard.c ****     If there are two or more real keys pressed and they match columns with
 107:./tmk_core/common/keyboard.c ****     at least two of another row's real keys, the row will be ignored. Keep in mind,
 108:./tmk_core/common/keyboard.c ****     we are checking one row at a time, not all of them at once.
 109:./tmk_core/common/keyboard.c ****     */
 110:./tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
 111:./tmk_core/common/keyboard.c ****         if (i != row && popcount_more_than_one(get_real_keys(i, matrix_get_row(i)) & rowdata)){
 112:./tmk_core/common/keyboard.c ****             return true;
 113:./tmk_core/common/keyboard.c ****         }
 114:./tmk_core/common/keyboard.c ****     }
 115:./tmk_core/common/keyboard.c ****     return false;
 116:./tmk_core/common/keyboard.c **** }
 117:./tmk_core/common/keyboard.c **** 
 118:./tmk_core/common/keyboard.c **** #endif
 119:./tmk_core/common/keyboard.c **** 
 120:./tmk_core/common/keyboard.c **** /** \brief matrix_setup
 121:./tmk_core/common/keyboard.c ****  *
 122:./tmk_core/common/keyboard.c ****  * FIXME: needs doc
 123:./tmk_core/common/keyboard.c ****  */
 124:./tmk_core/common/keyboard.c **** __attribute__ ((weak))
 125:./tmk_core/common/keyboard.c **** void matrix_setup(void) {
  16               		.loc 1 125 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22               	/* epilogue start */
 126:./tmk_core/common/keyboard.c **** }
  23               		.loc 1 126 0
  24 0000 0895      		ret
  25               		.cfi_endproc
  26               	.LFE4:
  28               		.section	.text.keyboard_setup,"ax",@progbits
  29               	.global	keyboard_setup
  31               	keyboard_setup:
  32               	.LFB5:
 127:./tmk_core/common/keyboard.c **** 
 128:./tmk_core/common/keyboard.c **** /** \brief keyboard_setup
 129:./tmk_core/common/keyboard.c ****  *
 130:./tmk_core/common/keyboard.c ****  * FIXME: needs doc
 131:./tmk_core/common/keyboard.c ****  */
 132:./tmk_core/common/keyboard.c **** void keyboard_setup(void) {
  33               		.loc 1 132 0
  34               		.cfi_startproc
  35               	/* prologue: function */
  36               	/* frame size = 0 */
  37               	/* stack size = 0 */
  38               	.L__stack_usage = 0
 133:./tmk_core/common/keyboard.c ****     matrix_setup();
  39               		.loc 1 133 0
  40 0000 0C94 0000 		jmp matrix_setup
  41               	.LVL0:
  42               		.cfi_endproc
  43               	.LFE5:
  45               		.section	.text.is_keyboard_master,"ax",@progbits
  46               		.weak	is_keyboard_master
  48               	is_keyboard_master:
  49               	.LFB6:
 134:./tmk_core/common/keyboard.c **** }
 135:./tmk_core/common/keyboard.c **** 
 136:./tmk_core/common/keyboard.c **** /** \brief is_keyboard_master
 137:./tmk_core/common/keyboard.c ****  *
 138:./tmk_core/common/keyboard.c ****  * FIXME: needs doc
 139:./tmk_core/common/keyboard.c ****  */
 140:./tmk_core/common/keyboard.c **** __attribute__((weak))
 141:./tmk_core/common/keyboard.c **** bool is_keyboard_master(void) {
  50               		.loc 1 141 0
  51               		.cfi_startproc
  52               	/* prologue: function */
  53               	/* frame size = 0 */
  54               	/* stack size = 0 */
  55               	.L__stack_usage = 0
 142:./tmk_core/common/keyboard.c ****     return true;
 143:./tmk_core/common/keyboard.c **** }
  56               		.loc 1 143 0
  57 0000 81E0      		ldi r24,lo8(1)
  58               	/* epilogue start */
  59 0002 0895      		ret
  60               		.cfi_endproc
  61               	.LFE6:
  63               		.section	.text.keyboard_init,"ax",@progbits
  64               	.global	keyboard_init
  66               	keyboard_init:
  67               	.LFB7:
 144:./tmk_core/common/keyboard.c **** 
 145:./tmk_core/common/keyboard.c **** /** \brief keyboard_init
 146:./tmk_core/common/keyboard.c ****  *
 147:./tmk_core/common/keyboard.c ****  * FIXME: needs doc
 148:./tmk_core/common/keyboard.c ****  */
 149:./tmk_core/common/keyboard.c **** void keyboard_init(void) {
  68               		.loc 1 149 0
  69               		.cfi_startproc
  70               	/* prologue: function */
  71               	/* frame size = 0 */
  72               	/* stack size = 0 */
  73               	.L__stack_usage = 0
 150:./tmk_core/common/keyboard.c ****     timer_init();
  74               		.loc 1 150 0
  75 0000 0E94 0000 		call timer_init
  76               	.LVL1:
 151:./tmk_core/common/keyboard.c ****     matrix_init();
  77               		.loc 1 151 0
  78 0004 0E94 0000 		call matrix_init
  79               	.LVL2:
 152:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 153:./tmk_core/common/keyboard.c ****     ps2_mouse_init();
 154:./tmk_core/common/keyboard.c **** #endif
 155:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 156:./tmk_core/common/keyboard.c ****     serial_mouse_init();
 157:./tmk_core/common/keyboard.c **** #endif
 158:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 159:./tmk_core/common/keyboard.c ****     adb_mouse_init();
 160:./tmk_core/common/keyboard.c **** #endif
 161:./tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
 162:./tmk_core/common/keyboard.c ****     bootmagic();
 163:./tmk_core/common/keyboard.c **** #else
 164:./tmk_core/common/keyboard.c ****     magic();
  80               		.loc 1 164 0
  81 0008 0C94 0000 		jmp magic
  82               	.LVL3:
  83               		.cfi_endproc
  84               	.LFE7:
  86               		.section	.text.keyboard_set_leds,"ax",@progbits
  87               	.global	keyboard_set_leds
  89               	keyboard_set_leds:
  90               	.LFB9:
 165:./tmk_core/common/keyboard.c **** #endif
 166:./tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
 167:./tmk_core/common/keyboard.c ****     backlight_init();
 168:./tmk_core/common/keyboard.c **** #endif
 169:./tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
 170:./tmk_core/common/keyboard.c ****     rgblight_init();
 171:./tmk_core/common/keyboard.c **** #endif
 172:./tmk_core/common/keyboard.c **** #ifdef STENO_ENABLE
 173:./tmk_core/common/keyboard.c ****     steno_init();
 174:./tmk_core/common/keyboard.c **** #endif
 175:./tmk_core/common/keyboard.c **** #ifdef FAUXCLICKY_ENABLE
 176:./tmk_core/common/keyboard.c ****     fauxclicky_init();
 177:./tmk_core/common/keyboard.c **** #endif
 178:./tmk_core/common/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
 179:./tmk_core/common/keyboard.c ****     pointing_device_init();
 180:./tmk_core/common/keyboard.c **** #endif
 181:./tmk_core/common/keyboard.c **** #if defined(NKRO_ENABLE) && defined(FORCE_NKRO)
 182:./tmk_core/common/keyboard.c ****     keymap_config.nkro = 1;
 183:./tmk_core/common/keyboard.c **** #endif
 184:./tmk_core/common/keyboard.c **** }
 185:./tmk_core/common/keyboard.c **** 
 186:./tmk_core/common/keyboard.c **** /** \brief Keyboard task: Do keyboard routine jobs
 187:./tmk_core/common/keyboard.c ****  *
 188:./tmk_core/common/keyboard.c ****  * Do routine keyboard jobs: 
 189:./tmk_core/common/keyboard.c ****  *
 190:./tmk_core/common/keyboard.c ****  * * scan matrix
 191:./tmk_core/common/keyboard.c ****  * * handle mouse movements
 192:./tmk_core/common/keyboard.c ****  * * run visualizer code
 193:./tmk_core/common/keyboard.c ****  * * handle midi commands
 194:./tmk_core/common/keyboard.c ****  * * light LEDs
 195:./tmk_core/common/keyboard.c ****  *
 196:./tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
 197:./tmk_core/common/keyboard.c ****  */
 198:./tmk_core/common/keyboard.c **** void keyboard_task(void)
 199:./tmk_core/common/keyboard.c **** {
 200:./tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 201:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 202:./tmk_core/common/keyboard.c ****   //  static matrix_row_t matrix_ghost[MATRIX_ROWS];
 203:./tmk_core/common/keyboard.c **** #endif
 204:./tmk_core/common/keyboard.c ****     static uint8_t led_status = 0;
 205:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 206:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 207:./tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 208:./tmk_core/common/keyboard.c ****     uint8_t keys_processed = 0;
 209:./tmk_core/common/keyboard.c **** #endif
 210:./tmk_core/common/keyboard.c **** 
 211:./tmk_core/common/keyboard.c ****     matrix_scan();
 212:./tmk_core/common/keyboard.c ****     if (is_keyboard_master()) {
 213:./tmk_core/common/keyboard.c ****         for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 214:./tmk_core/common/keyboard.c ****             matrix_row = matrix_get_row(r);
 215:./tmk_core/common/keyboard.c ****             matrix_change = matrix_row ^ matrix_prev[r];
 216:./tmk_core/common/keyboard.c ****             if (matrix_change) {
 217:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 218:./tmk_core/common/keyboard.c ****                 if (has_ghost_in_row(r, matrix_row)) {
 219:./tmk_core/common/keyboard.c ****                     /* Keep track of whether ghosted status has changed for
 220:./tmk_core/common/keyboard.c ****                     * debugging. But don't update matrix_prev until un-ghosted, or
 221:./tmk_core/common/keyboard.c ****                     * the last key would be lost.
 222:./tmk_core/common/keyboard.c ****                     */
 223:./tmk_core/common/keyboard.c ****                     //if (debug_matrix && matrix_ghost[r] != matrix_row) {
 224:./tmk_core/common/keyboard.c ****                     //    matrix_print();
 225:./tmk_core/common/keyboard.c ****                     //}
 226:./tmk_core/common/keyboard.c ****                     //matrix_ghost[r] = matrix_row;
 227:./tmk_core/common/keyboard.c ****                     continue;
 228:./tmk_core/common/keyboard.c ****                 }
 229:./tmk_core/common/keyboard.c ****                 //matrix_ghost[r] = matrix_row;
 230:./tmk_core/common/keyboard.c **** #endif
 231:./tmk_core/common/keyboard.c ****                 if (debug_matrix) matrix_print();
 232:./tmk_core/common/keyboard.c ****                 for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 233:./tmk_core/common/keyboard.c ****                     if (matrix_change & ((matrix_row_t)1<<c)) {
 234:./tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 235:./tmk_core/common/keyboard.c ****                             .key = (keypos_t){ .row = r, .col = c },
 236:./tmk_core/common/keyboard.c ****                             .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 237:./tmk_core/common/keyboard.c ****                             .time = (timer_read() | 1) /* time should not be 0 */
 238:./tmk_core/common/keyboard.c ****                         });
 239:./tmk_core/common/keyboard.c ****                         // record a processed key
 240:./tmk_core/common/keyboard.c ****                         matrix_prev[r] ^= ((matrix_row_t)1<<c);
 241:./tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 242:./tmk_core/common/keyboard.c ****                         // only jump out if we have processed "enough" keys.
 243:./tmk_core/common/keyboard.c ****                         if (++keys_processed >= QMK_KEYS_PER_SCAN)
 244:./tmk_core/common/keyboard.c **** #endif
 245:./tmk_core/common/keyboard.c ****                         // process a key per task call
 246:./tmk_core/common/keyboard.c ****                         goto MATRIX_LOOP_END;
 247:./tmk_core/common/keyboard.c ****                     }
 248:./tmk_core/common/keyboard.c ****                 }
 249:./tmk_core/common/keyboard.c ****             }
 250:./tmk_core/common/keyboard.c ****         }
 251:./tmk_core/common/keyboard.c ****     }
 252:./tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 253:./tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 254:./tmk_core/common/keyboard.c ****     // we can get here with some keys processed now.
 255:./tmk_core/common/keyboard.c ****     if (!keys_processed)
 256:./tmk_core/common/keyboard.c **** #endif
 257:./tmk_core/common/keyboard.c ****     action_exec(TICK);
 258:./tmk_core/common/keyboard.c **** 
 259:./tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 260:./tmk_core/common/keyboard.c **** 
 261:./tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 262:./tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 263:./tmk_core/common/keyboard.c ****     mousekey_task();
 264:./tmk_core/common/keyboard.c **** #endif
 265:./tmk_core/common/keyboard.c **** 
 266:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 267:./tmk_core/common/keyboard.c ****     ps2_mouse_task();
 268:./tmk_core/common/keyboard.c **** #endif
 269:./tmk_core/common/keyboard.c **** 
 270:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 271:./tmk_core/common/keyboard.c ****     serial_mouse_task();
 272:./tmk_core/common/keyboard.c **** #endif
 273:./tmk_core/common/keyboard.c **** 
 274:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 275:./tmk_core/common/keyboard.c ****     adb_mouse_task();
 276:./tmk_core/common/keyboard.c **** #endif
 277:./tmk_core/common/keyboard.c **** 
 278:./tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
 279:./tmk_core/common/keyboard.c **** 	serial_link_update();
 280:./tmk_core/common/keyboard.c **** #endif
 281:./tmk_core/common/keyboard.c **** 
 282:./tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
 283:./tmk_core/common/keyboard.c ****     visualizer_update(default_layer_state, layer_state, visualizer_get_mods(), host_keyboard_leds()
 284:./tmk_core/common/keyboard.c **** #endif
 285:./tmk_core/common/keyboard.c **** 
 286:./tmk_core/common/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
 287:./tmk_core/common/keyboard.c ****     pointing_device_task();
 288:./tmk_core/common/keyboard.c **** #endif
 289:./tmk_core/common/keyboard.c **** 
 290:./tmk_core/common/keyboard.c **** #ifdef MIDI_ENABLE
 291:./tmk_core/common/keyboard.c ****     midi_task();
 292:./tmk_core/common/keyboard.c **** #endif
 293:./tmk_core/common/keyboard.c **** 
 294:./tmk_core/common/keyboard.c ****     // update LED
 295:./tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 296:./tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 297:./tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 298:./tmk_core/common/keyboard.c ****     }
 299:./tmk_core/common/keyboard.c **** }
 300:./tmk_core/common/keyboard.c **** 
 301:./tmk_core/common/keyboard.c **** /** \brief keyboard set leds
 302:./tmk_core/common/keyboard.c ****  *
 303:./tmk_core/common/keyboard.c ****  * FIXME: needs doc
 304:./tmk_core/common/keyboard.c ****  */
 305:./tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 306:./tmk_core/common/keyboard.c **** {
  91               		.loc 1 306 0
  92               		.cfi_startproc
  93               	.LVL4:
  94 0000 CF93      		push r28
  95               	.LCFI0:
  96               		.cfi_def_cfa_offset 3
  97               		.cfi_offset 28, -2
  98               	/* prologue: function */
  99               	/* frame size = 0 */
 100               	/* stack size = 1 */
 101               	.L__stack_usage = 1
 102 0002 C82F      		mov r28,r24
 307:./tmk_core/common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
 103               		.loc 1 307 0
 104 0004 8091 0000 		lds r24,debug_config
 105               	.LVL5:
 106 0008 82FF      		sbrs r24,2
 107 000a 00C0      		rjmp .L7
 108               		.loc 1 307 0 is_stmt 0 discriminator 1
 109 000c 80FF      		sbrs r24,0
 110 000e 00C0      		rjmp .L8
 111               		.loc 1 307 0 discriminator 2
 112 0010 80E0      		ldi r24,lo8(__c.2768)
 113 0012 90E0      		ldi r25,hi8(__c.2768)
 114 0014 0E94 0000 		call xputs
 115               	.LVL6:
 116               	.L8:
 117               		.loc 1 307 0 discriminator 4
 118 0018 8091 0000 		lds r24,debug_config
 119 001c 80FF      		sbrs r24,0
 120 001e 00C0      		rjmp .L9
 121               		.loc 1 307 0 discriminator 5
 122 0020 1F92      		push __zero_reg__
 123               	.LCFI1:
 124               		.cfi_def_cfa_offset 4
 125 0022 CF93      		push r28
 126               	.LCFI2:
 127               		.cfi_def_cfa_offset 5
 128 0024 80E0      		ldi r24,lo8(__c.2770)
 129 0026 90E0      		ldi r25,hi8(__c.2770)
 130 0028 9F93      		push r25
 131               	.LCFI3:
 132               		.cfi_def_cfa_offset 6
 133 002a 8F93      		push r24
 134               	.LCFI4:
 135               		.cfi_def_cfa_offset 7
 136 002c 0E94 0000 		call __xprintf
 137               	.LVL7:
 138 0030 0F90      		pop __tmp_reg__
 139 0032 0F90      		pop __tmp_reg__
 140 0034 0F90      		pop __tmp_reg__
 141 0036 0F90      		pop __tmp_reg__
 142               	.LCFI5:
 143               		.cfi_def_cfa_offset 3
 144               	.L9:
 145               		.loc 1 307 0 discriminator 7
 146 0038 8091 0000 		lds r24,debug_config
 147 003c 80FF      		sbrs r24,0
 148 003e 00C0      		rjmp .L7
 149               		.loc 1 307 0 discriminator 8
 150 0040 80E0      		ldi r24,lo8(__c.2772)
 151 0042 90E0      		ldi r25,hi8(__c.2772)
 152 0044 0E94 0000 		call xputs
 153               	.LVL8:
 154               	.L7:
 308:./tmk_core/common/keyboard.c ****     led_set(leds);
 155               		.loc 1 308 0 is_stmt 1
 156 0048 8C2F      		mov r24,r28
 157               	/* epilogue start */
 309:./tmk_core/common/keyboard.c **** }
 158               		.loc 1 309 0
 159 004a CF91      		pop r28
 160               	.LVL9:
 308:./tmk_core/common/keyboard.c ****     led_set(leds);
 161               		.loc 1 308 0
 162 004c 0C94 0000 		jmp led_set
 163               	.LVL10:
 164               		.cfi_endproc
 165               	.LFE9:
 167               		.section	.text.keyboard_task,"ax",@progbits
 168               	.global	keyboard_task
 170               	keyboard_task:
 171               	.LFB8:
 199:./tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 172               		.loc 1 199 0
 173               		.cfi_startproc
 174 0000 BF92      		push r11
 175               	.LCFI6:
 176               		.cfi_def_cfa_offset 3
 177               		.cfi_offset 11, -2
 178 0002 CF92      		push r12
 179               	.LCFI7:
 180               		.cfi_def_cfa_offset 4
 181               		.cfi_offset 12, -3
 182 0004 DF92      		push r13
 183               	.LCFI8:
 184               		.cfi_def_cfa_offset 5
 185               		.cfi_offset 13, -4
 186 0006 EF92      		push r14
 187               	.LCFI9:
 188               		.cfi_def_cfa_offset 6
 189               		.cfi_offset 14, -5
 190 0008 FF92      		push r15
 191               	.LCFI10:
 192               		.cfi_def_cfa_offset 7
 193               		.cfi_offset 15, -6
 194 000a 0F93      		push r16
 195               	.LCFI11:
 196               		.cfi_def_cfa_offset 8
 197               		.cfi_offset 16, -7
 198 000c 1F93      		push r17
 199               	.LCFI12:
 200               		.cfi_def_cfa_offset 9
 201               		.cfi_offset 17, -8
 202 000e CF93      		push r28
 203               	.LCFI13:
 204               		.cfi_def_cfa_offset 10
 205               		.cfi_offset 28, -9
 206 0010 DF93      		push r29
 207               	.LCFI14:
 208               		.cfi_def_cfa_offset 11
 209               		.cfi_offset 29, -10
 210 0012 CDB7      		in r28,__SP_L__
 211 0014 DEB7      		in r29,__SP_H__
 212               	.LCFI15:
 213               		.cfi_def_cfa_register 28
 214 0016 2A97      		sbiw r28,10
 215               	.LCFI16:
 216               		.cfi_def_cfa_offset 21
 217 0018 0FB6      		in __tmp_reg__,__SREG__
 218 001a F894      		cli
 219 001c DEBF      		out __SP_H__,r29
 220 001e 0FBE      		out __SREG__,__tmp_reg__
 221 0020 CDBF      		out __SP_L__,r28
 222               	/* prologue: function */
 223               	/* frame size = 10 */
 224               	/* stack size = 19 */
 225               	.L__stack_usage = 19
 226               	.LVL11:
 211:./tmk_core/common/keyboard.c ****     if (is_keyboard_master()) {
 227               		.loc 1 211 0
 228 0022 0E94 0000 		call matrix_scan
 229               	.LVL12:
 212:./tmk_core/common/keyboard.c ****         for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 230               		.loc 1 212 0
 231 0026 0E94 0000 		call is_keyboard_master
 232               	.LVL13:
 233 002a 8823      		tst r24
 234 002c 01F4      		brne .+2
 235 002e 00C0      		rjmp .L21
 236 0030 80E0      		ldi r24,lo8(matrix_prev.2748)
 237 0032 C82E      		mov r12,r24
 238 0034 80E0      		ldi r24,hi8(matrix_prev.2748)
 239 0036 D82E      		mov r13,r24
 240 0038 10E0      		ldi r17,0
 241 003a 00E0      		ldi r16,0
 242               	.LVL14:
 243               	.L27:
 244 003c B02E      		mov r11,r16
 245               	.LVL15:
 246               	.LBB2:
 214:./tmk_core/common/keyboard.c ****             matrix_change = matrix_row ^ matrix_prev[r];
 247               		.loc 1 214 0
 248 003e 802F      		mov r24,r16
 249 0040 0E94 0000 		call matrix_get_row
 250               	.LVL16:
 251 0044 F82E      		mov r15,r24
 252               	.LVL17:
 215:./tmk_core/common/keyboard.c ****             if (matrix_change) {
 253               		.loc 1 215 0
 254 0046 F601      		movw r30,r12
 255 0048 E190      		ld r14,Z+
 256 004a 6F01      		movw r12,r30
 257               	.LVL18:
 216:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 258               		.loc 1 216 0
 259 004c E816      		cp r14,r24
 260 004e 01F4      		brne .+2
 261 0050 00C0      		rjmp .L22
 231:./tmk_core/common/keyboard.c ****                 for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 262               		.loc 1 231 0
 263 0052 8091 0000 		lds r24,debug_config
 264 0056 81FD      		sbrc r24,1
 231:./tmk_core/common/keyboard.c ****                 for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 265               		.loc 1 231 0 is_stmt 0 discriminator 1
 266 0058 0E94 0000 		call matrix_print
 267               	.LVL19:
 268               	.L23:
 215:./tmk_core/common/keyboard.c ****             if (matrix_change) {
 269               		.loc 1 215 0 is_stmt 1
 270 005c EF24      		eor r14,r15
 271               	.LVL20:
 272               	.LBB3:
 233:./tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 273               		.loc 1 233 0
 274 005e E0FC      		sbrc r14,0
 275 0060 00C0      		rjmp .L29
 276               	.LVL21:
 277 0062 E1FE      		sbrs r14,1
 278 0064 00C0      		rjmp .L22
 232:./tmk_core/common/keyboard.c ****                     if (matrix_change & ((matrix_row_t)1<<c)) {
 279               		.loc 1 232 0
 280 0066 91E0      		ldi r25,lo8(1)
 233:./tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 281               		.loc 1 233 0
 282 0068 81E0      		ldi r24,lo8(1)
 283               	.LVL22:
 284               	.L24:
 234:./tmk_core/common/keyboard.c ****                             .key = (keypos_t){ .row = r, .col = c },
 285               		.loc 1 234 0
 286 006a 9E83      		std Y+6,r25
 287 006c BF82      		std Y+7,r11
 236:./tmk_core/common/keyboard.c ****                             .time = (timer_read() | 1) /* time should not be 0 */
 288               		.loc 1 236 0
 289 006e 21E0      		ldi r18,lo8(1)
 290 0070 30E0      		ldi r19,0
 291 0072 6901      		movw r12,r18
 292 0074 00C0      		rjmp 2f
 293               		1:
 294 0076 CC0C      		lsl r12
 295 0078 DD1C      		rol r13
 296               		2:
 297 007a 8A95      		dec r24
 298 007c 02F4      		brpl 1b
 299 007e 8F2D      		mov r24,r15
 300 0080 90E0      		ldi r25,0
 301 0082 8C21      		and r24,r12
 302 0084 9D21      		and r25,r13
 303 0086 892B      		or r24,r25
 304 0088 01F4      		brne .L25
 305 008a 20E0      		ldi r18,0
 306               	.L25:
 234:./tmk_core/common/keyboard.c ****                             .key = (keypos_t){ .row = r, .col = c },
 307               		.loc 1 234 0
 308 008c 2887      		std Y+8,r18
 237:./tmk_core/common/keyboard.c ****                         });
 309               		.loc 1 237 0
 310 008e 0E94 0000 		call timer_read
 311               	.LVL23:
 312 0092 8160      		ori r24,1
 234:./tmk_core/common/keyboard.c ****                             .key = (keypos_t){ .row = r, .col = c },
 313               		.loc 1 234 0
 314 0094 782F      		mov r23,r24
 315 0096 9A87      		std Y+10,r25
 316 0098 8987      		std Y+9,r24
 317 009a 4E81      		ldd r20,Y+6
 318 009c 5F81      		ldd r21,Y+7
 319 009e 6885      		ldd r22,Y+8
 320 00a0 8A85      		ldd r24,Y+10
 321 00a2 0E94 0000 		call action_exec
 322               	.LVL24:
 240:./tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 323               		.loc 1 240 0
 324 00a6 F801      		movw r30,r16
 325 00a8 E050      		subi r30,lo8(-(matrix_prev.2748))
 326 00aa F040      		sbci r31,hi8(-(matrix_prev.2748))
 327 00ac 8081      		ld r24,Z
 328 00ae C826      		eor r12,r24
 329 00b0 C082      		st Z,r12
 330               	.LVL25:
 331               	.L26:
 332               	.LBE3:
 333               	.LBE2:
 263:./tmk_core/common/keyboard.c **** #endif
 334               		.loc 1 263 0
 335 00b2 0E94 0000 		call mousekey_task
 336               	.LVL26:
 295:./tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 337               		.loc 1 295 0
 338 00b6 0E94 0000 		call host_keyboard_leds
 339               	.LVL27:
 340 00ba 9091 0000 		lds r25,led_status.2749
 341 00be 8917      		cp r24,r25
 342 00c0 01F0      		breq .L20
 296:./tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 343               		.loc 1 296 0
 344 00c2 0E94 0000 		call host_keyboard_leds
 345               	.LVL28:
 346 00c6 8093 0000 		sts led_status.2749,r24
 347               	/* epilogue start */
 299:./tmk_core/common/keyboard.c **** 
 348               		.loc 1 299 0
 349 00ca 2A96      		adiw r28,10
 350 00cc 0FB6      		in __tmp_reg__,__SREG__
 351 00ce F894      		cli
 352 00d0 DEBF      		out __SP_H__,r29
 353 00d2 0FBE      		out __SREG__,__tmp_reg__
 354 00d4 CDBF      		out __SP_L__,r28
 355 00d6 DF91      		pop r29
 356 00d8 CF91      		pop r28
 357 00da 1F91      		pop r17
 358 00dc 0F91      		pop r16
 359 00de FF90      		pop r15
 360 00e0 EF90      		pop r14
 361 00e2 DF90      		pop r13
 362 00e4 CF90      		pop r12
 363 00e6 BF90      		pop r11
 297:./tmk_core/common/keyboard.c ****     }
 364               		.loc 1 297 0
 365 00e8 0C94 0000 		jmp keyboard_set_leds
 366               	.LVL29:
 367               	.L30:
 368               	.LBB5:
 369 00ec 01E0      		ldi r16,lo8(1)
 370 00ee 10E0      		ldi r17,0
 371               	.LVL30:
 372 00f0 00C0      		rjmp .L27
 373               	.LVL31:
 374               	.L29:
 375               	.LBB4:
 232:./tmk_core/common/keyboard.c ****                     if (matrix_change & ((matrix_row_t)1<<c)) {
 376               		.loc 1 232 0
 377 00f2 90E0      		ldi r25,0
 233:./tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 378               		.loc 1 233 0
 379 00f4 80E0      		ldi r24,0
 380 00f6 00C0      		rjmp .L24
 381               	.LVL32:
 382               	.L22:
 383               	.LBE4:
 213:./tmk_core/common/keyboard.c ****             matrix_row = matrix_get_row(r);
 384               		.loc 1 213 0
 385 00f8 0130      		cpi r16,1
 386 00fa 1105      		cpc r17,__zero_reg__
 387 00fc 01F4      		brne .L30
 388               	.LVL33:
 389               	.L21:
 390               	.LBE5:
 257:./tmk_core/common/keyboard.c **** 
 391               		.loc 1 257 0
 392 00fe 8FEF      		ldi r24,lo8(-1)
 393 0100 8983      		std Y+1,r24
 394 0102 8A83      		std Y+2,r24
 395 0104 1B82      		std Y+3,__zero_reg__
 396 0106 0E94 0000 		call timer_read
 397               	.LVL34:
 398 010a 8160      		ori r24,1
 399 010c 782F      		mov r23,r24
 400 010e 9D83      		std Y+5,r25
 401 0110 8C83      		std Y+4,r24
 402 0112 4981      		ldd r20,Y+1
 403 0114 5A81      		ldd r21,Y+2
 404 0116 6B81      		ldd r22,Y+3
 405 0118 8D81      		ldd r24,Y+5
 406 011a 0E94 0000 		call action_exec
 407               	.LVL35:
 408 011e 00C0      		rjmp .L26
 409               	.L20:
 410               	/* epilogue start */
 299:./tmk_core/common/keyboard.c **** 
 411               		.loc 1 299 0
 412 0120 2A96      		adiw r28,10
 413 0122 0FB6      		in __tmp_reg__,__SREG__
 414 0124 F894      		cli
 415 0126 DEBF      		out __SP_H__,r29
 416 0128 0FBE      		out __SREG__,__tmp_reg__
 417 012a CDBF      		out __SP_L__,r28
 418 012c DF91      		pop r29
 419 012e CF91      		pop r28
 420 0130 1F91      		pop r17
 421 0132 0F91      		pop r16
 422 0134 FF90      		pop r15
 423 0136 EF90      		pop r14
 424 0138 DF90      		pop r13
 425 013a CF90      		pop r12
 426 013c BF90      		pop r11
 427 013e 0895      		ret
 428               		.cfi_endproc
 429               	.LFE8:
 431               		.section	.progmem.data.__c.2772,"a",@progbits
 434               	__c.2772:
 435 0000 0A00      		.string	"\n"
 436               		.section	.progmem.data.__c.2770,"a",@progbits
 439               	__c.2770:
 440 0000 2530 3258 		.string	"%02X"
 440      00
 441               		.section	.progmem.data.__c.2768,"a",@progbits
 444               	__c.2768:
 445 0000 6B65 7962 		.string	"keyboard_set_led: "
 445      6F61 7264 
 445      5F73 6574 
 445      5F6C 6564 
 445      3A20 00
 446               		.section	.bss.led_status.2749,"aw",@nobits
 449               	led_status.2749:
 450 0000 00        		.zero	1
 451               		.section	.bss.matrix_prev.2748,"aw",@nobits
 454               	matrix_prev.2748:
 455 0000 0000      		.zero	2
 456               		.text
 457               	.Letext0:
 458               		.file 2 "/usr/avr/include/stdint.h"
 459               		.file 3 "./tmk_core/common/keyboard.h"
 460               		.file 4 "./tmk_core/common/matrix.h"
 461               		.file 5 "./tmk_core/common/host.h"
 462               		.file 6 "./tmk_core/common/avr/xprintf.h"
 463               		.file 7 "./tmk_core/common/debug.h"
 464               		.file 8 "./quantum/keycode_config.h"
 465               		.file 9 "./quantum/keymap.h"
 466               		.file 10 "./tmk_core/common/timer.h"
 467               		.file 11 "./tmk_core/common/command.h"
 468               		.file 12 "./tmk_core/common/action_layer.h"
 469               		.file 13 "./tmk_core/common/mousekey.h"
 470               		.file 14 "./tmk_core/common/led.h"
 471               		.file 15 "./tmk_core/common/action.h"
 472               		.file 16 "./tmk_core/common/magic.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
 /var/tmp/ccMu6UIr.s:2      *ABS*:000000000000003e __SP_H__
 /var/tmp/ccMu6UIr.s:3      *ABS*:000000000000003d __SP_L__
 /var/tmp/ccMu6UIr.s:4      *ABS*:000000000000003f __SREG__
 /var/tmp/ccMu6UIr.s:5      *ABS*:0000000000000000 __tmp_reg__
 /var/tmp/ccMu6UIr.s:6      *ABS*:0000000000000001 __zero_reg__
 /var/tmp/ccMu6UIr.s:13     .text.matrix_setup:0000000000000000 matrix_setup
 /var/tmp/ccMu6UIr.s:31     .text.keyboard_setup:0000000000000000 keyboard_setup
 /var/tmp/ccMu6UIr.s:48     .text.is_keyboard_master:0000000000000000 is_keyboard_master
 /var/tmp/ccMu6UIr.s:66     .text.keyboard_init:0000000000000000 keyboard_init
 /var/tmp/ccMu6UIr.s:89     .text.keyboard_set_leds:0000000000000000 keyboard_set_leds
 /var/tmp/ccMu6UIr.s:444    .progmem.data.__c.2768:0000000000000000 __c.2768
 /var/tmp/ccMu6UIr.s:439    .progmem.data.__c.2770:0000000000000000 __c.2770
 /var/tmp/ccMu6UIr.s:434    .progmem.data.__c.2772:0000000000000000 __c.2772
 /var/tmp/ccMu6UIr.s:170    .text.keyboard_task:0000000000000000 keyboard_task
 /var/tmp/ccMu6UIr.s:454    .bss.matrix_prev.2748:0000000000000000 matrix_prev.2748
 /var/tmp/ccMu6UIr.s:449    .bss.led_status.2749:0000000000000000 led_status.2749

UNDEFINED SYMBOLS
timer_init
matrix_init
magic
debug_config
xputs
__xprintf
led_set
matrix_scan
matrix_get_row
matrix_print
timer_read
action_exec
mousekey_task
host_keyboard_leds
__do_clear_bss
